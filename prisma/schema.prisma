// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model users {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email      String  @unique
  cpf        String?
  tel        String?
  password   String?
  permission String?
  officie    String?

  //okrs okrs[]

  //Cada usuário possui varias okrs
  //okrs_IDs String[] @db.ObjectId
  //okr      okrs[]   @relation(fields: [okrs_IDs], references: [id])

  okrsmanagers okrs[] @relation("Manager")
  okrsteams    okrs[] @relation("Team")

  //Cada usuário pertencea a uma empresa
  companyId String
  company   company @relation(fields: [companyId], references: [id])

  //Cada usuário pertence a um setor
  sectors_id String?  @db.ObjectId
  sector     sectors? @relation(fields: [sectors_id], references: [id])

  imageProfile String?

  createdIn DateTime? @default(now())
  updatedIn DateTime? @updatedAt
}

model company {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  cnpj      String?
  tel       String?
  instagram String?
  address   String?
  //Cada empresa possui N usuários
  users     users[]

  //A empresa irá possuir vários okr's
  okrs okrs[]

  //A empresa irá possuir várias sector
  sector sectors[]

  createdIn DateTime? @default(now())
  updatedIn DateTime? @updatedAt
}


model sectors {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?

  //Cada sector irá possuir vários usuários
  users users[]

  //Cada sector irá possuir várias okr's
  okrs okrs[]

  //Cada sector irá pertencer a uma empresa
  company_id String  @db.ObjectId
  company    company @relation(fields: [company_id], references: [id])

  createdIn DateTime? @default(now())
  updatedIn DateTime? @updatedAt
}

model okrs {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  nome String?

  manager_id String @db.ObjectId
  manager    users  @relation("Manager", fields: [manager_id], references: [id])

  team_id String[] @db.ObjectId
  team    users    @relation("Team", fields: [team_id], references: [id])

  //Cada okr pertence a uma sector
  sector_id String? @db.ObjectId
  sector    sectors? @relation(fields: [sector_id], references: [id])

  //Cada okr pertence a N usuários [ 1 manager e N usuário ]
  //users_IDs String[] @db.ObjectId
  //users     users[] @relation(fields: [users_IDs], references: [id])

  //Cada okr irá pertencer a uma empresa
  company_id String  @db.ObjectId
  company    company @relation(fields: [company_id], references: [id])

  //Cada okr possuí uma ou mais ações
  keys key[]

  description String?

  deadline  String?
  createdIn DateTime? @default(now())
  updatedIn DateTime? @updatedAt
}

model key {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  title String

  okr_id String @db.ObjectId
  okr    okrs   @relation(fields: [okr_id], references: [id])

  dateToCompletion String
  createdIn        DateTime? @default(now())
  updatedIn        DateTime? @updatedAt
}
